apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "killbill.fullname" . }}
  labels:
    {{- include "killbill.labels" . | nindent 4 }}
    tier: server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "killbill.selectorLabels" . | nindent 6 }}
      tier: server
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "killbill.selectorLabels" . | nindent 8 }}
        tier: server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{/*      serviceAccountName: {{ include "killbill.serviceAccountName" . }}*/}}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.database.loadSchema }}
      initContainers:
        - name: download-schema
          image: busybox
          command:
            - /bin/sh
            - "-c"
            - |
              echo 'CREATE DATABASE IF NOT EXISTS `{{ include "killbill.databaseName" . }}`;' >> /schema/killbill-ddl.sql
              echo 'USE killbill;' >> /schema/killbill-ddl.sql
              echo 'CREATE DATABASE IF NOT EXISTS `{{ include "kaui.databaseName" . }}`;' >> /schema/kaui-ddl.sql
              echo 'USE kaui;' >> /schema/kaui-ddl.sql
              wget http://docs.killbill.io/{{ .Values.killbill.version }}/ddl.sql -O - >> /schema/killbill-ddl.sql
              wget https://raw.githubusercontent.com/killbill/killbill-admin-ui/master/db/ddl.sql -O - >> /schema/kaui-ddl.sql
              wget https://raw.githubusercontent.com/killbill/killbill-stripe-plugin/master/src/main/resources/ddl.sql -O - >> /schema/killbill-ddl.sql
              wget https://raw.githubusercontent.com/killbill/killbill-analytics-plugin/master/src/main/resources/org/killbill/billing/plugin/analytics/ddl.sql - >> /schema/killbill-ddl.sql
              wget https://raw.githubusercontent.com/killbill/killbill-adyen-plugin/master/src/main/resources/ddl.sql -O - >> /schema/killbill-ddl.sql
              echo "INSERT INTO kaui.kaui_allowed_users (kb_username, description, created_at, updated_at) values ('admin', 'super admin', NOW(), NOW());" >> /schema/kaui-ddl.sql
              echo 'DONE!'
          volumeMounts:
            - mountPath: /schema
              name: schema
        - name: load-schema
          image: mysql:8.0.27
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "killbill.databaseSecretName" . }}
                  key: mysql-root-password
          command:
            - /bin/sh
            - "-c"
            - |
              mysql -u root -p$MYSQL_ROOT_PASSWORD -h {{ include "killbill.databaseHost" . }}  < /schema/killbill-ddl.sql
              mysql -u root -p$MYSQL_ROOT_PASSWORD -h {{ include "killbill.databaseHost" . }}  < /schema/kaui-ddl.sql
              echo 'Database schemas loaded!'
          volumeMounts:
            - mountPath: /schema
              name: schema
      {{- end }}
      volumes:
        - name: schema
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "killbill.fullname" . }}-config
            items:
              - key: shiro.ini
                path: shiro.ini
        {{- if .Values.killbill.plugins.persistentVolume.enabled }}
        - name: plugins
          persistentVolumeClaim:
          {{- if .Values.killbill.plugins.persistentVolume.existingClaim }}
            claimName: {{ .Values.killbill.plugins.persistentVolume.existingClaim }}
          {{- end }}
          {{- if not .Values.killbill.plugins.persistentVolume.existingClaim }}
            claimName: {{ include "killbill.fullname" . }}-plugins
          {{- end }}
        {{- end }}
          
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.killbill.image.repository }}:{{ .Values.killbill.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.killbill.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: KILLBILL_DAO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: "mysql-root-password"
                  name: {{ include "killbill.databaseSecretName" . }}
            - name: KILLBILL_DAO_URL
              value: {{ include "killbill.databaseUrl" . | quote }}
            - name: KILLBILL_DAO_USER
              value: "root"
          volumeMounts:
            - mountPath: /var/lib/killbill/config
              name: config
            {{- if .Values.killbill.plugins.persistentVolume.enabled }}
            - mountPath: /var/lib/killbill/bundles/plugins
              name: plugins
            {{- end }}
          resources:
          {{- toYaml .Values.killbill.resources | nindent 12 }}

        #
        # Sidecar container for inventory checking
        #
        - name: "{{ .Values.sidecar.name }}" 
          image: "{{ .Values.sidecar.image }}:{{ .Values.sidecar.tag }}"  # Use values from values.yaml
          env:
            - name: DB_HOST
              value: "localhost"  # Both containers can communicate via localhost
            - name: DB_USER
              value: "root"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "killbill.databaseSecretName" . }}
                  key: mysql-root-password
            - name: DB_NAME
              value: "killbill"
          volumeMounts:
            - mountPath: /var/lib/killbill/config
              name: config  # This refers to the volume defined earlier
          livenessProbe:
            httpGet:
              path: /health  # Ensure the sidecar exposes a health check endpoint
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
        #
        # End: Sidecar definition
        #
      restartPolicy: Always
      {{- with .Values.killbill.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.killbill.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kaui.fullname" . }}
  labels:
    {{- include "kaui.labels" . | nindent 4 }}
    tier: server
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "kaui.selectorLabels" . | nindent 6 }}
      tier: server
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kaui.selectorLabels" . | nindent 8 }}
        tier: server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{/*      serviceAccountName: {{ include "killbill.serviceAccountName" . }}*/}}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "kaui.fullname" . }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.kaui.image.repository }}:{{ .Values.kaui.image.tag }}"
          imagePullPolicy: {{ .Values.kaui.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: KAUI_CONFIG_DAO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: "mysql-root-password"
                  name: {{ include "killbill.databaseSecretName" . }}
            - name: KAUI_CONFIG_DAO_URL
              value: {{ include "kaui.databaseUrl" . | quote }}
            - name: KAUI_CONFIG_DAO_USER
              value: "root"
            - name: KAUI_KILLBILL_URL
              value: {{ include "killbill.internalUrl" . | quote }}
            - name: KAUI_ROOT_USERNAME
              value: {{ .Values.kaui.rootUser | quote }}
          resources:
            {{- toYaml .Values.killbill.resources | nindent 12 }}
      restartPolicy: Always
      {{- with .Values.killbill.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.killbill.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

#
# Include the inventory sidecar service if it is enabled in the values.yaml
# (I can place the include before the side care definiiton in the "containers" section.
#  I thought augmenting at the end is clearer).
#
{{- if .Values.sidecar.service.enabled }}
{{- include "inventory-checker-service" . }}
{{- end }}
