{{- $portRange := untilStep (int .Values.ports.from) (int .Values.ports.to) 1 -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "coturn.fullname" . }}
  labels:
    {{- include "coturn.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "coturn.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/coturn-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "coturn.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "coturn.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: COTURN_USER
            value: {{ .Values.secret.username | quote }}
          - name: COTURN_SECRET
            {{- if .Values.secret.password }}
            value: {{ .Values.secret.password | quote }}
            {{- else }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.name }}
                key: {{ .Values.secret.key }}
            {{- end }}
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          args:
            - "--listening-ip=${POD_IP}"
            - "-u ${COTURN_USER}:${COTURN_SECRET}"
            - "--external-ip=$(detect-external-ip)/${POD_IP}"
#            - "--relay-ip=$(detect-external-ip)"
          ports:
            - name: turn-3478
              containerPort: 3478
              protocol: UDP
            - name: turn-tcp-3478
              containerPort: 3478
              protocol: TCP
          {{- range $portRange }}
            - name: turn-{{ . }}
              containerPort: {{ . }}
              hostPort: {{ . }}
              protocol: UDP
          {{- end }}
          volumeMounts:
            - name: coturn-config
              mountPath: /turnserver.conf
              subPath: turnserver.conf
              readOnly: true
            - name: var-tmp
              mountPath: /var/tmp          
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: coturn-config
          configMap:
            name: {{ include "coturn.fullname" . }}-config
        - name: var-tmp
          emptyDir: {}      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
