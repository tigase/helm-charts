# Default values for tigase-xmpp-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# no. of Tigase instances to create to form a cluster
replicaCount: 1

image:
  repository: tigase/tigase-xmpp-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# main vhost of the XMPP server
vhost: ""

# list of admins of the XMPP server
admins:
#  - "admin1@example.com" 
#  - "admin2@example.com"

database:
  # use "mysql" or "postgresql"
  type: "mysql"
  # host name for accessing database
  host: ""
  # use if different than default
  port: ""
  # name of the database to use
  name: "tigase"
  # username for authentication
  user: "tigase"
  # secret name containing password of the database user
  secret: ""
  # ket of the secret containing password for the database user
  secretPasswordKey: "password"

certificate:
  generateWildcard: false
  repository:
    enabled: true

service:
  annotations: {}
  type: LoadBalancer
  ports:
    c2s: 5222
    cs2s: 5223
    s2s: 5269
    bosh: 5280
    ws2s: 5290
    wss2s: 5291
    http: 8080
    
# HTTP File Upload
fileUpload:
  enabled: false
  # domain which should be used for HTTP File Upload (should be resolved to ingress if it is used)
  domain: ''
  # max file size allowed to accept
  maxFileSize: "20971520"
  storage: ''
  # S3 file storage configuration
  s3storage:
    bucket: ''
    region: ''
    # (optional)
    endpointUrl: ''
    accessKeyId: ''
    # name of the secret containing password (accessKeyId is used as a secret key to retrieve actual value)
    secret: ''
    # (optional) 
    pathStyleAccess: ''    
  # PV storage configuration
  pvStorage:
    existingClaim: ''
    storage: 5Gi

# Configuration for Tigase Meet        
meet:
  # uri to access Janus from inside k8s cluster
  janusURI: "ws://janus:8188/"          

users:
  create: false

sessMan:
  amp:
    threadsNo: ''
    
additionalConfiguration: ''

# external IP/domain name which should be used for accessing server from outside
externalIP: ''

initContainers: []

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  ## Name of the SSL certificate provider to use from:
  ## - self-signed
  ## - letsencrypt          
  sslProvider: "self-signed"
  ## Name of the certificate issuer to use instead of sslProvider
  sslCertificateIssuer: ""
  tls: 
  #   hosts:
  #     - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
